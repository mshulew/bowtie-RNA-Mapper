// vim: set filetype=nextflow

manifest {
    name = "bowtie aligner"
    description = 'Aligns reads from fastq to fasta reference file using bowtie' 
    author = 'Mark Shulewitz Bio-Rad Laboratories'
    mainScript = 'main.nf'
    version = '2.0'
}

// Global default params, used in configs
params {
    outDir = './results'
    container = 'mshulew/bowtie-aligner:latest'
    pipeline = 'rRNA'
    genome = 'hg38'
    spikeType = 'NONE'
    bowtie_fa = 'NONE'
    skipUmi = false
    count_threshold = 5
    help = false
    reverseStrand = false
    noTrim = false
    removeReads = false
    fracOverlap = 0
    SE = false
    umi = 'R2'
    bowtie_index = 'NONE'
    neb = false
    skipRemove = false
    libraryType = 'SEQuoia'
}


// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

// Container, should specifiy release tag
process.container = params.container

profiles {
    docker { docker.enabled = true }
}

// Function to ensure that resource requirements don't go beyond
// a maximum limit
// From: https://github.com/nf-core/rnaseq/blob/master/nextflow.config
def check_max(obj, type) {
  if(type == 'memory'){
    try {
      if(obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
        return params.max_memory as nextflow.util.MemoryUnit
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
      return obj
    }
  } else if(type == 'time'){
    try {
      if(obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
        return params.max_time as nextflow.util.Duration
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
      return obj
    }
  } else if(type == 'cpus'){
    try {
      return Math.min( obj, params.max_cpus as int )
    } catch (all) {
      println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
      return obj
    }
  }
}
